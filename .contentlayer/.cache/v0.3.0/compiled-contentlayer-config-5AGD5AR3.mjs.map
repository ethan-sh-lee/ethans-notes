{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypePrism from \"rehype-prism-plus\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  contentType: \"mdx\",\n  filePathPattern: `posts/**/*.mdx`,\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/${post._raw.flattenedPath}`,\n    },\n  },\n}));\n\nexport const DailyLog = defineDocumentType(() => ({\n  name: \"DailyLog\",\n  contentType: \"mdx\",\n  filePathPattern: `dailylogs/**/*.mdx`,\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the problem\",\n      required: true,\n    },\n    link: {\n      type: \"string\",\n      description: \"The link of the problem\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the daily log\",\n      required: true,\n    },\n    isOk: {\n      type: \"boolean\",\n      description: \"failure or success\",\n    },\n    platform: {\n      type: \"enum\",\n      options: [\"\uD504\uB85C\uADF8\uB798\uBA38\uC2A4\", \"\uBC31\uC900\"],\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (log) => `/${log._raw.flattenedPath}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"contents\",\n  documentTypes: [Post, DailyLog],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [rehypePrism],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,iBAAiB;AACxB,OAAO,eAAe;AAEf,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK;AAAA,IACnC;AAAA,EACF;AACF,EAAE;AAEK,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS,CAAC,wCAAU,cAAI;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK;AAAA,IACjC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,QAAQ;AAAA,EAC9B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe,CAAC,WAAW;AAAA,EAC7B;AACF,CAAC;",
  "names": []
}
